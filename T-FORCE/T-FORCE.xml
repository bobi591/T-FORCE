<?xml version="1.0"?>
<doc>
    <assembly>
        <name>T-FORCE</name>
    </assembly>
    <members>
        <member name="T:T_FORCE.AppDbContextFactory">
            <summary>
            Creates application context with concrete option settings.
            </summary>
        </member>
        <member name="T:T_FORCE.Controllers.HomeController">
            <summary>
            The main <c>HomeController</c> class.
            Contains methods for performing requests from the Home Page.
            </summary>
        </member>
        <member name="M:T_FORCE.Controllers.HomeController.Index">
            <summary>
            Returns the T-Force home page.
            </summary>
        </member>
        <member name="M:T_FORCE.Controllers.HomeController.Privacy">
            <summary>
            Returns the T-Force privacy page.
            </summary>
        </member>
        <member name="M:T_FORCE.Controllers.HomeController.CreateProject(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            HTTP Request - Create new Project.
            </summary>
            <returns>
            Redirection to the home page.
            </returns>
            <param name="projectName">The desired project name.</param>
            <param name="projectCode">The desired project code.</param>
            <param name="taskStatusesElements">List of the available task statuses for tasks assigned to the project.</param>
        </member>
        <member name="T:T_FORCE.Controllers.KanbanController">
            <summary>
            The main <c>KanbanController</c> class.
            Contains methods for performing requests related to Kanban Boards.
            </summary>
        </member>
        <member name="M:T_FORCE.Controllers.KanbanController.CreateCustomBoard">
            <summary>
            Returns the Create Custom Board page.
            </summary>
        </member>
        <member name="M:T_FORCE.Controllers.KanbanController.CreateCustomBoard(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            HTTP Request - Create new Custom Kanban Board.
            </summary>
            <returns>
            Redirection to the Boards page.
            </returns>
            <param name="name">The desired Kanban Board name.</param>
            <param name="projectName">The desired project name of the Kanban Board (the project name should be existing).</param>
            <param name="columnName">List of the columns in the Kanban Board.</param>
        </member>
        <member name="M:T_FORCE.Controllers.KanbanController.CreateTypicalBoard">
            <summary>
            HTTP Request - Create new Typical Kanban Board with three columns.
            </summary>
            <returns>
            Redirection to the Home Page.
            </returns>
        </member>
        <member name="M:T_FORCE.Controllers.KanbanController.Boards">
            <summary>
            View all boards.
            </summary>
            <returns>
            Boards view with a model list of created boards.
            </returns>
        </member>
        <member name="M:T_FORCE.Controllers.KanbanController.Board(System.String)">
            <summary>
            View a Kanban Board.
            </summary>
            <returns>
            Returns the board view with the kanban board model.
            </returns>
            <param name="id">ID of the Kanban Board to be shown.</param>
        </member>
        <member name="M:T_FORCE.Controllers.KanbanController.TaskColumnSwitch(System.String,System.Int32,System.String)">
            <summary>
            HTTP Request - Moves a task from one column to another.
            </summary>
            <returns>
            Redirection to Board view with updated Kanban Board data as model.
            </returns>
            <param name="taskProjectCodeId">The Project Code ID of the task. (ex. SUP, CAT, etc..)</param>
            <param name="boardId">The Kanban Board ID.</param>
            <param name="columnDesc">The destination column name. (ex. In Progress, Resolved)</param>
        </member>
        <member name="T:T_FORCE.Controllers.TasksController">
            <summary>
            The main <c>TasksController</c> class.
            Contains methods for performing requests related to Tasks.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:T_FORCE.Controllers.TasksController.CreateTask" -->
        <member name="M:T_FORCE.Controllers.TasksController.CreateTask(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            HTTP Request - Create new Task.
            </summary>
            <returns>
            Redirection to the Home page.
            </returns>
            <param name="name">The name of the task.</param>
            <param name="description">The description of the task.</param>
            <param name="projectName">The name of the parent project.</param>
            <param name="taskTypes">The task type. (ex. EPIC, ISSUE, TASK)</param>
            <param name="expectedEndDate">Expected date when the task should be finished.</param>
        </member>
        <member name="M:T_FORCE.Controllers.TasksController.ViewTask(System.String)">
            <summary>
            View a task.
            </summary>
            <returns>
            Redirection to the View Task page.
            </returns>
            <param name="taskId">The ID of the task that should be opened.</param>
        </member>
        <member name="M:T_FORCE.Controllers.TasksController.AssignToMe(System.String)">
            <summary>
            HTTP Request - Assigns a task to the current that calls this action.
            </summary>
            <returns>
            Redirection to the View Task page with updated task entity as model.
            </returns>
            <param name="taskId">The ID of the task that should be assigned to the current user.</param>
        </member>
        <member name="M:T_FORCE.Controllers.TasksController.ChangeTaskStatus(System.String,System.String)">
            <summary>
            HTTP Request - Change the status of a task.
            </summary>
            <returns>
            Redirection to the View Task page with updated task entity as model.
            </returns>
            <param name="taskStatuses">The new status of the task.</param>
            <param name="taskId">The ID of the task that should be assigned to the current user.</param>
        </member>
        <member name="M:T_FORCE.Controllers.TasksController.GetTaskStatuses(System.String)">
            <summary>
            HTTP Request - Retrieve the list of available task statuses in the project.
            </summary>
            <returns>
            JSON array with a list of available task statuses in the Project.
            </returns>
            <param name="projectCode">The Project Code.</param>
        </member>
        <member name="M:T_FORCE.Controllers.TasksController.Comment(System.String,System.String)">
            <summary>
            HTTP Request - Add comment in the task.
            </summary>
            <returns>
            Redirection to the View Task page with updated task entity as model.
            </returns>
            <param name="taskId">The Task ID of the task that should be commented.</param>
            <param name="comment">The comment that should be added to the task.</param>
        </member>
        <member name="M:T_FORCE.Controllers.TasksController.GetTaskTypes">
            <summary>
            HTTP Request - Fetch task types (Issue, Epic, Story, etc..).
            </summary>
            <returns>
            JSON array with list of task types.
            </returns>
        </member>
        <member name="T:T_FORCE.Controllers.UserController">
            <summary>
            The main <c>UserController</c> class.
            Contains methods for performing requests related to Users.
            </summary>
        </member>
        <member name="M:T_FORCE.Controllers.UserController.LoginAsync(System.String,System.String,System.String)">
            <summary>
            HTTP Request - Login user. The methods checks if the user is eligible for authentication and generates its claims principals.
            </summary>
            <returns>
            Redirection to the Home page.
            </returns>
            <param name="username">Username of the user to be logged in.</param>
            <param name="password">Password of the user to be logged in.</param>
            <param name="remember">Remember me flag. (1 or 0)</param>
        </member>
        <member name="M:T_FORCE.Controllers.UserController.Register(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            HTTP Request - Register new user. The methods checks if the user is eligible for registration and the required properties are unique.
            </summary>
            <returns>
            Redirection to the Home page.
            </returns>
            <param name="username">Username of the user to be registered.</param>
            <param name="password">Password of the user to be registered.</param>
            <param name="email">Email of the user to be registered.</param>
            <param name="firstName">First name the user to be registered.</param>
            <param name="lastName">Last name the user to be registered.</param>
            <param name="passwordRepeat">Second password for confirmation.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:T_FORCE.Controllers.UserController.Login" -->
        <!-- Badly formed XML comment ignored for member "M:T_FORCE.Controllers.UserController.Register" -->
        <member name="M:T_FORCE.Models.KanbanBoard.IsCustomBoard">
            <summary>
            Returns true if the board is custom board.
            </summary>
        </member>
        <member name="M:T_FORCE.Models.KanbanBoard.RefreshBoardContent">
            <summary>
            Checks the board's project and aligns the board column content properly.
            </summary>
        </member>
        <member name="M:T_FORCE.Models.KanbanBoard.SetColumns(System.Collections.Generic.List{System.String})">
            <summary>
            Creates columns with in the kanban board.
            </summary>
        </member>
        <member name="M:T_FORCE.Models.KanbanBoard.GetColumns">
            <summary>
            Retrieves the names of the columns in the kanban board.
            </summary>
        </member>
        <member name="M:T_FORCE.Models.KanbanBoard.GetSwim">
            <summary>
            Gets a dictionary with column number as key and list of task IDs in the column as value.
            </summary>
        </member>
        <member name="M:T_FORCE.Models.KanbanBoard.AddSwim(System.Int32,System.Int32)">
            <summary>
            Puts task in a column of the current Kanban Board.
            </summary>
        </member>
        <member name="M:T_FORCE.Models.KanbanBoard.GetColumnNumber(System.String)">
            <summary>
            Finds the column number by providing the column text.
            </summary>
        </member>
        <member name="T:T_FORCE.Models.ModelFactory">
            <summary>
            Creates model objects with mandatory attributes.
            </summary>
        </member>
        <member name="M:T_FORCE.Models.ModelFactory.CreateUserObject(T_FORCE.Models.UserOrganization,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates user object with mandatory attributes.
            </summary>
        </member>
        <member name="M:T_FORCE.Models.ModelFactory.CreateTask(System.String,System.String,T_FORCE.Models.TaskType,System.Int32,System.DateTime,System.DateTime,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates task object with mandatory attributes.
            </summary>
        </member>
        <member name="M:T_FORCE.Models.ModelFactory.CreateTask(System.String,System.String,T_FORCE.Models.TaskType,T_FORCE.Models.User,System.DateTime,System.DateTime,System.Nullable{System.Int32})">
            <summary>
            Creates task object with mandatory attributes.
            </summary>
        </member>
        <member name="M:T_FORCE.Models.ModelFactory.CreateKanbanBoard(System.String,System.Int32,System.DateTime,System.Int32,System.Collections.Generic.List{System.String},System.String,System.Boolean)">
            <summary>
            Creates Kanban Board object with mandatory attributes.
            </summary>
        </member>
        <member name="M:T_FORCE.Models.ModelFactory.CreateProject(System.String,System.String,System.Int32,System.DateTime,System.Collections.Generic.List{System.String})">
            <summary>
            Creates Project object with mandatory attributes.
            </summary>
        </member>
        <member name="M:T_FORCE.Models.ModelFactory.CreateComment(System.String,System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            Creates Comment object with mandatory attributes.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:T_FORCE.Models.Project.SetTaskStatuses(System.Collections.Generic.List{System.String})" -->
        <!-- Badly formed XML comment ignored for member "M:T_FORCE.Models.Project.GetTaskStatuses" -->
        <member name="M:T_FORCE.Models.Task.GetAssigneeFirstLastName">
            <summary>
            Gets the user First + Last name. (ex. John Andersson)
            </summary>
        </member>
        <member name="M:T_FORCE.Models.Task.GetComments">
            <summary>
            Gets the comments for the current task.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:T_FORCE.Models.User.GetFirstNameLastName" -->
        <member name="T:T_FORCE.Processes.Authenticate">
            <summary>
            Implements the complete authentication process of the application.
            GetClaimsPrincipal() method returns a ClaimsPrincipal used in the User controller for authentication.
            </summary>
        </member>
        <member name="M:T_FORCE.Processes.Authenticate.GetClaimsPrincipal(System.String,System.String)">
            <summary>
            Returns a tuple of ClaimsPrincipal and viewbag message used in the User controller for authentication and output for viewbag messages
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:T_FORCE.Processes.ObjectUniquenessCheck" -->
        <!-- Badly formed XML comment ignored for member "M:T_FORCE.Processes.ObjectUniquenessCheck.ProjectIsUnique(T_FORCE.Models.Project)" -->
        <member name="T:T_FORCE.Processes.RegistrationProcess">
            <summary>
            Implements the complete registration process of the application.
            Register() performs the whole process.
            </summary>
        </member>
        <member name="M:T_FORCE.Processes.RegistrationProcess.Register(T_FORCE.Models.User)">
            <summary>
            Performs the whole registration process. Returns viewbag message string.
            </summary>
        </member>
        <member name="M:T_FORCE.Processes.Utilities.Encrypt(System.String)">
            <summary>
            Returns the SHA256 string representation.
            </summary>
        </member>
        <member name="T:T_FORCE.Repositories.CommentRepository">
            <summary>
            The main <c>CommentRepository</c> class.
            Contains methods for database related queries related to the Comment object.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.CommentRepository.GetCommentById(System.String)">
            <summary>
            Retrieves the comment by Id.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.CommentRepository.GetCommentsCreatedBy(System.String)">
            <summary>
            Retrieves comments created from a User.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.CommentRepository.GetCommentsForTask(System.String)">
            <summary>
            Retrieves comments for a Task.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.CommentRepository.SaveComment(T_FORCE.Models.Comment)">
            <summary>
            Save the passed Comment object into the database.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.CommentRepository.UpdateComment(T_FORCE.Models.Comment)">
            <summary>
            Update the passed Comment object into the database. The method sets the Last Modified DateTime automatically.
            </summary>
        </member>
        <member name="T:T_FORCE.Repositories.KanbanBoardRepository">
            <summary>
            The main <c>KanbanBoardRepository</c> class.
            Contains methods for database related queries related to the KanbanBoard object.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.KanbanBoardRepository.GetKanbanBoardById(System.String)">
            <summary>
            Retrieves the kanban board by Id.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.KanbanBoardRepository.GetAll">
            <summary>
            Retrieves all Kanban boards.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.KanbanBoardRepository.SaveKanbanBoard(T_FORCE.Models.KanbanBoard)">
            <summary>
            Saves the kanban board into the database.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.KanbanBoardRepository.UpdateKanbanBoard(T_FORCE.Models.KanbanBoard)">
            <summary>
            Updates the kanban board into the database.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.KanbanBoardRepository.GetKanbanBoardsCreatedBy(System.Int32)">
            <summary>
            Gets the Kanban boards created by the user.
            </summary>
        </member>
        <member name="T:T_FORCE.Repositories.ProjectRepository">
            <summary>
            The main <c>ProjectRepository</c> class.
            Contains methods for database related queries related to the Project object.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.ProjectRepository.GetProjectByName(System.String)">
            <summary>
            Get project by name.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.ProjectRepository.GetProjectById(System.String)">
            <summary>
            Get project by Id.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.ProjectRepository.GetProjectByCode(System.String)">
            <summary>
            Get project by code.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.ProjectRepository.SaveProject(T_FORCE.Models.Project)">
            <summary>
            Saves the project into the database. Returns viewbag message.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.ProjectRepository.UpdateProject(T_FORCE.Models.Project)">
            <summary>
            Updates the project in the database.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.ProjectRepository.GetAllProjects">
            <summary>
            Gets all the projects.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.ProjectRepository.IsUnique(T_FORCE.Models.Project,System.String@)">
            <summary>
            Checks if the project name and code are unique.
            </summary>
        </member>
        <member name="T:T_FORCE.Repositories.TaskRepository">
            <summary>
            The main <c>TaskRepository</c> class.
            Contains methods for database related queries related to the Task object.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.TaskRepository.GetTasksCreatedByUsername(System.String)">
            <summary>
            Returns a list of tasks created by the username.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.TaskRepository.GetAssignedTasksByUsername(System.String)">
            <summary>
            Returns a list of tasks assigned to the username.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.TaskRepository.AssignTask(System.String,System.Int32)">
            <summary>
            Put assignee to the task.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.TaskRepository.SaveTask(T_FORCE.Models.Task)">
            <summary>
            Save the passed Task object into the database.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.TaskRepository.UpdateTask(T_FORCE.Models.Task)">
            <summary>
            Update the passed Task object into the database.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.TaskRepository.GetTaskById(System.String)">
            <summary>
            Get task by id.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.TaskRepository.GetTasksInKanbanboardColumn(System.Int32,System.Int32)">
            <summary>
            Gets the list of tasks in specific column in specific kanbanboard.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.TaskRepository.GetTaskByProjectCodeId(System.String)">
            <summary>
            Gets the task object by project code ID (ProjectCode+TaskID (example ABC123)).
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.TaskRepository.GetTasksInProject(T_FORCE.Models.Project)">
            <summary>
            Get tasks assigned to Project.
            </summary>
        </member>
        <member name="T:T_FORCE.Repositories.UserRepository">
            <summary>
            The main <c>UserRepository</c> class.
            Contains methods for database related queries related to the User object.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.UserRepository.GetUserByUsername(System.String)">
            <summary>
            Get user by username.
            </summary>
        </member>
        <member name="M:T_FORCE.Repositories.UserRepository.GetUserById(System.Int32)">
            <summary>
            Get user by id.
            </summary>
        </member>
    </members>
</doc>
