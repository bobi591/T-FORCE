@{ ViewData["Title"] = "Dashboard";
    Layout = "/GenericViews/Shared/_Layout.cshtml";}

@model Dictionary<string, List<T_FORCE.Tasks.Models.Task>>
@using T_FORCE.UI
@using T_FORCE.EntityFramework



<div id="container" style="padding: 2%">
    <div class="row">
        <div class="col-5">
            <h1 class="h3 mb-1 text-gray-800">Created Tasks</h1>
            <p class="mb-4">Tasks created by you</p>

            @{
                ProjectRepository projectRepository = new ProjectRepository();
                foreach (T_FORCE.Tasks.Models.Task task in Model[PredefinedViewBag.CreatedTasks])
                { <!--Created by me Task card-->
                    <div class="card shadow mb-4">
                        <!-- Card Header - Accordion -->
                        <a href="#collapseCardCreatedTask-@task.Id" class="d-block card-header py-3" data-toggle="collapse" role="button" aria-expanded="false" aria-controls="collapseCardCreatedTask-@task.Id">
                            <h6 class="m-0 font-weight-bold text-primary">@task.ProjectCode@task.Id - @task.Name</h6>
                        </a>
                        <!-- Card Content - Collapse -->
                        <div class="collapse" id="collapseCardCreatedTask-@task.Id" style="">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-10">
                                        <label for="tdescription"><b>Description</b></label>
                                        <div class="task-description">
                                            @Html.Raw(@task.Description)
                                        </div>
                                        <label for="tassignee"><b>Assignee</b></label>
                                        <p>@task.GetAssigneeFirstLastName()</p>
                                        <label for="tstatus"><b>Status</b></label>
                                        <p>@task.TaskStatus</p>
                                        <label for="tProject"><b>Project</b></label>
                                        <p>@projectRepository.GetProjectByCode(task.ProjectCode).Name</p>
                                    </div>
                                    <div class="col">
                                        <div class="row">
                                            <button onclick="window.location.href='/Tasks/ViewTask?taskId=@task.Id'" type="button" class="btn btn-outline-primary" style="margin: 2%;">Open</button>
                                        </div>
                                        <div class="row">
                                            <button href="/Tasks/Archive?id=@task.Id" ype="button" class="btn btn-outline-warning" style="margin: 2%;">Archive</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div> } }
        </div>
        <div class="col-5">
            <h1 class="h3 mb-1 text-gray-800">Assigned Tasks</h1>
            <p class="mb-4">Tasks assigned to you</p>

            @{
                foreach (T_FORCE.Tasks.Models.Task task in Model[PredefinedViewBag.AssignedTasks])
                { <!--Assigned Task card-->
                    <div class="card shadow mb-4">
                        <!-- Card Header - Accordion -->
                        <a href="#collapseCardAssignedTask-@task.Id" class="d-block card-header py-3" data-toggle="collapse" role="button" aria-expanded="false" aria-controls="collapseCardAssignedTask-@task.Id">
                            <h6 class="m-0 font-weight-bold text-primary">@task.ProjectCode@task.Id - @task.Name</h6>
                        </a>
                        <!-- Card Content - Collapse -->
                        <div class="collapse" id="collapseCardAssignedTask-@task.Id" style="">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-10">
                                        <label for="tdescription"><b>Description</b></label>
                                        <div class="task-description">
                                            @Html.Raw(@task.Description)
                                        </div>
                                        <label for="tassignee"><b>Assignee</b></label>
                                        <p>@task.GetAssigneeFirstLastName()</p>
                                        <label for="tstatus"><b>Status</b></label>
                                        <p>@task.TaskStatus</p>
                                        <label for="tProject"><b>Project</b></label>
                                        <p>@projectRepository.GetProjectByCode(task.ProjectCode).Name</p>
                                    </div>
                                    <div class="col">
                                        <div class="row">
                                            <button onclick="window.location.href='/Tasks/ViewTask?taskId=@task.Id'" type="button" class="btn btn-outline-primary" style="margin: 2%;">Open</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div> } }
        </div>
        <div class="col" style="margin-top: 6%; padding-left: 3%">
            <div class="row">
                <p>Tasks assigned to me: @Model[PredefinedViewBag.AssignedTasks].Count</p>
            </div>
            <div class="row">
                <p>Tasks created by me: @Model[PredefinedViewBag.CreatedTasks].Count</p>
            </div>
            <div class="row">
                <button onclick="window.location.href='/Tasks/CreateTask'" type="button" class="btn btn-outline-success" style="margin: 2%;">Create task</button>
            </div>
            <div class="row">
                <button type="button" data-toggle="modal" data-target="#createProjectModal" class="btn btn-outline-success" style="margin: 2%;">Create project</button>
            </div>
        </div>
    </div>
    @ViewBag.Message
</div>


<!-- Create project modal -->
<div class="modal fade" id="createProjectModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Create new project</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
                <form method="post" action="@Url.Action("CreateProject","Home")" id="projectProperties">
                    <div class="modal-body">
                        <label for="pName">Project name</label>
                        <input type="text" class="form-control form-control-user"
                               id="projectName" name="projectName" placeholder="Project name..." required>

                        <label for="pName">Project code</label>
                        <input type="text" class="form-control form-control-user"
                               id="projectCode" name="projectCode" placeholder="Project code..." required>

                        <label id="taskStatusesLabel" for="pTaskStatus"></label>
                        <ul class="list-group" id="taskStatuses" name="taskStatuses">
                        </ul>

                        <label for="pTaskStatus">Enter new task status</label>
                        <div class="input-group mb-3">
                            <input type="text" class="form-control form-control-user"
                                   id="taskStatus" name="taskStatus" placeholder="Enter new task status..." aria-describedby="add-status-button">
                            <div class="input-group-append">
                                <input class="btn btn-outline-success" onclick="GenerateTaskStatusInput()" id="add-status-button" type="button" value="Add" />
                            </div>
                        </div>

                    </div>
                    <div class="modal-footer" id="modalFooter">
                        <input id="btn-createProject" type="submit" class="btn btn-success" value="Save Changes" disabled>
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    </div>
               </form>
        </div>
    </div>
</div>


<!-- Dynamic options menu for task status in Project creation -->
<script type="text/javascript">

    function GenerateTaskStatusInput() {

        var taskStatusInput = document.getElementById("taskStatus");

        var taskStatusesLabel = document.getElementById("taskStatusesLabel");

        if (taskStatusInput.value != '') {

            if (taskStatusesLabel.innerHTML === "") {
                taskStatusesLabel.innerHTML = "Task statuses";
            }

            var inputGroupElement = document.createElement("div");
            inputGroupElement.setAttribute('class', 'input-group mb-3');

            var appendElement = document.createElement("div");
            appendElement.setAttribute('class', 'input-group-append');

            var appendElementRemoveButton = document.createElement("input");
            appendElementRemoveButton.setAttribute('class', 'btn btn-outline-danger');
            appendElementRemoveButton.setAttribute('type', 'button');
            appendElementRemoveButton.setAttribute('onclick', 'RemoveCurrentElement(this)')
            appendElementRemoveButton.setAttribute('value', 'Remove');
            appendElementRemoveButton.setAttribute('id', 'remove-status-button');

            var taskStatusesNewElement = document.createElement("input");
            taskStatusesNewElement.setAttribute('name', 'taskStatusesElements');
            taskStatusesNewElement.setAttribute('class', 'list-group-item list-group-item-action form-control form-control-user');
            taskStatusesNewElement.setAttribute('onchange', 'TaskStatusesLiOnChange(this)');
            taskStatusesNewElement.setAttribute('aria-describedby', 'remove-status-button');
            taskStatusesNewElement.setAttribute('type', 'text');
            taskStatusesNewElement.value = taskStatusInput.value;

            inputGroupElement.appendChild(taskStatusesNewElement);
            inputGroupElement.appendChild(appendElement);
            appendElement.appendChild(appendElementRemoveButton);

            document.getElementById("taskStatuses").appendChild(inputGroupElement);

            taskStatusInput.value = '';

            document.getElementById("btn-createProject").disabled = false;
        }

    }

    //If the Task Statuses li user imput gets empty, remove the element!
    function TaskStatusesLiOnChange(obj) {

        var taskStatusesList = document.getElementById("taskStatuses");

        if (obj.value === '' && taskStatusesList.childElementCount==1) {
            taskStatusesLabel.innerHTML = "";
            document.getElementById("btn-createProject").disabled = true;
        }

        if (obj.value === '') {
            obj.parentNode.remove();
        }
    }

    //Remove the current status list input field
    function RemoveCurrentElement(obj) {

        obj.parentElement.parentElement.remove();

        var taskStatusesList = document.getElementById("taskStatuses");

        if (taskStatusesList.childElementCount < 1) {
            taskStatusesLabel.innerHTML = "";
            document.getElementById("btn-createProject").disabled = true;
        }
    }
</script>
